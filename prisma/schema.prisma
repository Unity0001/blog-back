generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URI")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  nomeDeUsuario String    @unique
  senha         String
  email         String    @unique
  nomeCompleto  String
  dataRegistro  DateTime  @default(now())
  posts         Post[]
  comentarios   Comment[]
}

model Post {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  titulo      String
  slug        String    @unique
  conteudo    String
  autor       User      @relation(fields: [autorId], references: [id])
  autorId     String    @db.ObjectId
  categoria   Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId String    @db.ObjectId
  PostTag     PostTag[]
  comentarios Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  publishedAt DateTime?
  status      String    @default("rascunho")
}

model Categoria {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  nome  String @unique
  slug  String @unique
  posts Post[]
}

model Tag {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  nome    String    @unique
  slug    String    @unique
  PostTag PostTag[]
}

model PostTag {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  postId String @db.ObjectId
  post   Post   @relation(fields: [postId], references: [id])
  tagId  String @db.ObjectId
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@unique([postId, tagId])
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  postId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  autorId   String?  @db.ObjectId
  autor     User?    @relation(fields: [autorId], references: [id])
  texto     String
  createdAt DateTime @default(now())
}
